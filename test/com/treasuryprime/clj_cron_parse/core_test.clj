(ns com.treasuryprime.clj-cron-parse.core-test
  (:require
   [clj-time.core :as t]
   [clojure.test :refer [deftest is testing]]
   [com.treasuryprime.clj-cron-parse.core :refer [next-date]]))

(def now (t/date-time 2015 01 01 12 00 00 000))
(def nye (t/date-time 2014 12 31 12 00 00 000))

(deftest dates-test
  (testing "should find next date for cron expression"
    (is (= (t/date-time 2015 01 01 12 00 01) (next-date now "1 * * * * *")))
    (is (= (t/date-time 2022 05 24 11 00 00) (next-date (t/date-time 2022 05 24 10 59 00) "0 */5 * * * *")))
    (is (= (t/date-time 2015 01 01 12 01 00) (next-date now "* 1 * * * *")))
    (is (= (t/date-time 2015 01 01 13 00 00) (next-date now "* * 13 * * *")))
    (is (= (t/date-time 2015 01 10 12 00 00) (next-date now "* * * 10 * *")))
    (is (= (t/date-time 2015 02 01 12 00 00) (next-date now "* * * * 2 *")))
    (is (= (t/date-time 2015 10 14 13 12 11) (next-date now "11 12 13 14 10 *")))
    (is (= (t/date-time 2015 01 04 12 00 00) (next-date now "* * * * * 0")))
    (is (= (t/date-time 2015 01 07 12 00 00) (next-date now "* * * * * 3")))
    (is (= (t/date-time 2015 01 01 10 00 00) (next-date nye "* * 10 * * *")))
    (is (= (t/date-time 2015 01 01 12 00 01) (next-date now "1,2 * * * * *")))
    (is (= (t/date-time 2015 01 01 12 00 01) (next-date now "1-20 * * * * *")))
    (is (= (t/date-time 2015 01 01 12 00 02) (next-date now "*/2 * * * * *")))
    (is (= (t/date-time 2015 01 01 12 00 01) (next-date now "1-20/2 * * * * *")))
    (is (= (t/date-time 2015 01 01 12 00 05) (next-date (t/date-time 2015 01 01 12 00 04) "3-20/2 * * * * *")))
    (is (= (t/date-time 2015 01 01 12 01 00) (next-date now "* 1,2 * * * *")))
    (is (= (t/date-time 2015 01 01 12 00 00) (next-date now "* */2 * * * *")))
    (is (= (t/date-time 2015 01 01 12 01 00) (next-date now "* 1-20 * * * *")))
    (is (= (t/date-time 2015 01 01 12 01 00) (next-date now "* 1-20/2 * * * *")))
    (is (= (t/date-time 2015 01 01 12 07 00) (next-date (t/date-time 2015 01 01 12 05 00) "* 1-20/3 * * * *")))
    (is (= (t/date-time 2015 01 02 01 00 00) (next-date now "* * 1,2 * * *")))
    (is (= (t/date-time 2015 01 01 14 00 00) (next-date (t/date-time 2015 01 01 13 00 00) "* * */2 * * *")))
    (is (= (t/date-time 2015 01 02 01 00 00) (next-date (t/date-time 2015 01 01 21 00 00) "* * 1-20 * * *")))
    (is (= (t/date-time 2015 01 01 13 00 00) (next-date now "* * 1-20/2 * * *")))
    (is (= (t/date-time 2015 01 02 11 00 00) (next-date now "* * 11 1,2 * *")))
    (is (= (t/date-time 2015 01 02 12 00 00) (next-date now "* * * */2 * *")))
    (is (= (t/date-time 2015 01 02 11 00 00) (next-date now "* * 11 1-20 * *")))
    (is (= (t/date-time 2015 01 03 11 00 00) (next-date now "* * 11 1-20/2 * *")))
    (is (= (t/date-time 2015 01 31 12 00 00) (next-date now "* * * L * *")))
    (is (= (t/date-time 2015 01 02 12 00 00) (next-date now "* * * W * *")))
    (is (= (t/date-time 2015 01 05 12 00 00) (next-date (t/date-time 2015 01 02 12 00 00) "* * * W * *")))
    (is (= (t/date-time 2015 02 01 12 00 00) (next-date now "* * * * FEB *")))
    (is (= (t/date-time 2015 02 01 12 00 00) (next-date now "* * * * feb *")))
    (is (= (t/date-time 2015 02 01 12 00 00) (next-date now "* * * * 2 *")))
    (is (= (t/date-time 2015 02 01 12 00 00) (next-date now "* * * * 2,3 *")))
    (is (= (t/date-time 2015 02 01 12 00 00) (next-date now "* * * * */2 *")))
    (is (= (t/date-time 2015 02 01 12 00 00) (next-date now "* * * * 2-11 *")))
    (is (= (t/date-time 2015 02 01 12 00 00) (next-date now "* * * * 2-11/3 *")))
    (is (= (t/date-time 2015 04 01 12 00 00) (next-date (t/date-time 2015 03 01 12 00 00) "* * * * 1-11/3 *")))
    (is (= (t/date-time 2015 01 05 12 00 00) (next-date now "* * * * * 1,2")))
    (is (= (t/date-time 2015 01 02 11 00 00) (next-date now "* * 11 * * 1-5")))
    (is (= (t/date-time 2015 01 02 11 00 00) (next-date now "* * 11 * * W")))
    (is (= (t/date-time 2015 01 05 12 00 00) (next-date now "* * * * * MON")))
    (is (= (t/date-time 2015 01 05 12 00 00) (next-date now "* * * * * mon")))
    (is (= (t/date-time 2015 01 02 12 00 00) (next-date now "* * * * * */2")))
    ;(next-date now "* * * * * 1-5/2") => (bit of an edge case I think)
    (is (= (t/date-time 2015 01 26 12 00 00) (next-date now "* * * * * 1L")))
    (is (= (t/date-time 2015 01 26 12 00 00) (next-date now "* * * * * 1L,2L")))
    (is (= (t/date-time 2015 01 27 12 00 00) (next-date now "* * * * * 2L")))
    (is (= (t/date-time 2015 01 28 12 00 00) (next-date now "* * * * * 3L")))
    (is (= (t/date-time 2015 01 29 12 00 00) (next-date now "* * * * * 4L")))
    (is (= (t/date-time 2015 01 30 12 00 00) (next-date now "* * * * * 5L")))
    (is (= (t/date-time 2015 01 31 12 00 00) (next-date now "* * * * * 6L")))
    (is (= (t/date-time 2015 01 25 12 00 00) (next-date now "* * * * * 7L")))
    (is (= (t/date-time 2015 01 25 12 00 00) (next-date now "* * * * * 6L,7L")))
    (is (= (t/date-time 2015 01 05 11 00 00) (next-date (t/date-time 2015 01 02 12 00 00) "* * 11 * * 1-5")))
    (is (= (t/date-time 2015 01 05 11 00 00) (next-date (t/date-time 2015 01 02 12 00 00) "* * 11 * * W")))
    (is (= (t/date-time 2016 01 01 00 00 00) (next-date now "@yearly")))
    (is (= (t/date-time 2016 01 01 00 00 00) (next-date now "@annually")))
    (is (= (t/date-time 2015 02 01 00 00 00) (next-date now "@monthly")))
    (is (= (t/date-time 2015 01 05 00 00 00) (next-date now "@weekly")))
    (is (= (t/date-time 2015 01 02 00 00 00) (next-date now "@daily")))
    (is (= (t/date-time 2015 01 02 00 00 00) (next-date now "@midnight")))
    (is (= (t/date-time 2015 01 01 13 00 00) (next-date now "@hourly")))
    (is (= (t/date-time 2015 04 22 06 22 30) (next-date (t/date-time 2015 04 22 06 22 29) "30 22 6 * * 3")))
    (is (= (t/date-time 2015 04 22 06 22 30) (next-date (t/date-time 2015 04 21 06 22 30) "30 22 6 * * 3")))))

;; TODO: close to new year, combinations, range/n for dow

(deftest return-nil-test
  (testing "should return nil for an invalid cron expression"
    (is (nil? (next-date now "x * * * * *")))
    (is (nil? (next-date now "* x * * * *")))
    (is (nil? (next-date now "* * x * * *")))
    (is (nil? (next-date now "* * * x * *")))
    (is (nil? (next-date now "* * * * x *")))
    (is (nil? (next-date now "* * * * * x")))
    (is (nil? (next-date now "L * * * * *")))
    (is (nil? (next-date now "* L * * * *")))
    (is (nil? (next-date now "* * L * * *")))
    (is (nil? (next-date now "* * * 1L * *")))
    (is (nil? (next-date now "* * * * L *")))
    (is (nil? (next-date now "* * * * * L")))
    (is (nil? (next-date now "W * * * * *")))
    (is (nil? (next-date now "* W * * * *")))
    (is (nil? (next-date now "* * W * * *")))
    (is (nil? (next-date now "* * * * W *")))
    (is (nil? (next-date now "61 * * * * *")))
    (is (nil? (next-date now "* 61 * * * *")))
    (is (nil? (next-date now "* * 25 * * *")))
    (is (nil? (next-date now "* * * 32 * *")))
    (is (nil? (next-date now "* * * * 13 *")))
    (is (nil? (next-date now "* * * * * * *")))
    (is (nil? (next-date now "1,62 * * * * *")))
    (is (nil? (next-date now "* 1,62 * * * *")))
    (is (nil? (next-date now "* * 1,25 * * *")))
    (is (nil? (next-date now "* * * 1,32 * *")))
    (is (nil? (next-date now "* * * * 2,13 *")))
    (is (nil? (next-date now "* * * * * 1,8")))
    (is (nil? (next-date now "1-62 * * * * *")))
    (is (nil? (next-date now "* 1-62 * * * *")))
    (is (nil? (next-date now "* * 1-25 * * *")))
    (is (nil? (next-date now "* * * 1-32 * *")))
    (is (nil? (next-date now "* * * * 2-13 *")))
    (is (nil? (next-date now "* * * * * 1-8")))
    (is (nil? (next-date now "* * * * * 8L")))
    (is (nil? (next-date now "* * * * febx *")))
    (is (nil? (next-date now "* * * * * MONx")))
    (is (nil? (next-date now "s s")))
    (is (nil? (next-date now "")))))

(deftest timezone-next-date-test
  (testing "should provide next date calculated within a timezone"
    (is (= (t/date-time 2015 01 01 12 00 01) (next-date now "1 0 12 * * *" nil)))
    (is (= (t/date-time 2015 01 01 12 00 01) (next-date now "1 0 12 * * *" "UTC")))
    (is (= (t/date-time 2015 01 02 03 00 01) (next-date now "1 0 12 * * *" "Asia/Seoul")))
    (is (= (t/date-time 2015 01 01 14 00 01) (next-date (t/date-time 2015 01 01 12 00 02) "1 0 12 * * *" "America/Sao_Paulo")))
    (is (= (t/date-time 2015 01 01 12 01 01) (next-date (t/date-time 2015 01 01 12 00 02) "1 * * * * *" "America/Sao_Paulo")))))

(deftest short-month-bug
  (testing "should handle crons at the end of a month where the next month is shorter"
    (is (= (t/date-time 2020 04 01 00 00) (next-date (t/date-time 2020 3 30) "0 0 0 1 * *")))
    (is (= (t/date-time 2020 02 01 00 00) (next-date (t/date-time 2020 1 30) "0 0 0 1 * *")))

    (is (= (t/date-time 2025 01 28 05 02 00) (next-date (t/date-time 2025 1 28 05 00 00) "0 2 5 * * *")))
    ; ;; When we are at the exact timestamp of the cron, we should schedule for
    ; ;; the NEXT instance.
    (is (= (t/date-time 2025 01 29 05 02 00) (next-date (t/date-time 2025 1 28 05 02 00) "0 2 5 * * *")))
    (is (= (t/date-time 2025 02 01 04 12 00) (next-date (t/date-time 2025 1 30 03 00 00) "0 12 4 1,2,4 * *")))
    (is (= (t/date-time 2025 02 01 04 12 00) (next-date (t/date-time 2025 1 30 03 00 00) "0 12 4 1,2,4 * *")))
    (is (= (t/date-time 2025 02 02 04 12 00) (next-date (t/date-time 2025 1 30 03 00 00) "0 12 4 2,4 * *")))

    (is (= (t/date-time 2025 03 02 04 12 00) (next-date (t/date-time 2025 2 28 03 00 00) "0 12 4 2,4 * *")))
    (is (= (t/date-time 2025 04 02 04 12 00) (next-date (t/date-time 2025 3 30 03 00 00) "0 12 4 2,4 * *")))

    (is (= (t/date-time 2025 04 02 04 12 00) (next-date (t/date-time 2025 1 30 03 00 00) "0 12 4 2,4 4 *")))))

(deftest always-future-test
  (testing "should always generate a timestamp after the provided timestamp"
    (is (= (t/date-time 2025 02 19 11 20 00)
           (next-date (t/date-time 2025 02 19 11 15 59) "0 */5 * * * *")))))
